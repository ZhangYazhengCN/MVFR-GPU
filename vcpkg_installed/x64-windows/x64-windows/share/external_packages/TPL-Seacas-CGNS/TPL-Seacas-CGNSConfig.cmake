get_filename_component(VCPKG_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_DIR}/../../../" ABSOLUTE)
# Package config file for external package/TPL 'CGNS'
#
# Generated by CMake, do not edit!

# Guard against multiple inclusion
if (TARGET TPL::CGNS::all_libs)
  return()
endif()

include(CMakeFindDependencyMacro)

# Don't allow find_dependency() to search anything other than <upstreamTplName>_DIR
set(CGNS_SearchNoOtherPathsArgs
  NO_DEFAULT_PATH
  NO_PACKAGE_ROOT_PATH NO_CMAKE_PATH
  NO_CMAKE_ENVIRONMENT_PATH
  NO_SYSTEM_ENVIRONMENT_PATH
  NO_CMAKE_PACKAGE_REGISTRY
  NO_CMAKE_SYSTEM_PATH
  NO_CMAKE_SYSTEM_PACKAGE_REGISTRY
  CMAKE_FIND_ROOT_PATH_BOTH
  ONLY_CMAKE_FIND_ROOT_PATH
  NO_CMAKE_FIND_ROOT_PATH
  )

if (NOT TARGET TPL::HDF5::all_libs)
  set(TPL-Seacas-HDF5_DIR "${CMAKE_CURRENT_LIST_DIR}/../TPL-Seacas-HDF5")
  # Really only upstream ? NO ! THis is for ::all_libs targets in internal consumers
  find_dependency(TPL-Seacas-HDF5 REQUIRED CONFIG ${CGNS_SearchNoOtherPathsArgs})
  unset(TPL-Seacas-HDF5_DIR)
endif()

unset(CGNS_SearchNoOtherPathsArgs)

add_library(TPL::CGNS::cgnsdll IMPORTED UNKNOWN)
set_target_properties(TPL::CGNS::cgnsdll PROPERTIES
  IMPORTED_LOCATION "${VCPKG_IMPORT_PREFIX}/lib/cgnsdll.lib")
target_link_libraries(TPL::CGNS::cgnsdll
  INTERFACE $<LINK_ONLY:HDF5::all_libs>  # i.e. PRIVATE
  )

add_library(TPL::CGNS::all_libs INTERFACE IMPORTED)
target_link_libraries(TPL::CGNS::all_libs
  INTERFACE TPL::CGNS::cgnsdll
  )
target_include_directories(TPL::CGNS::all_libs SYSTEM
  INTERFACE "${VCPKG_IMPORT_PREFIX}/include"
  INTERFACE "${VCPKG_IMPORT_PREFIX}/include"
  )

